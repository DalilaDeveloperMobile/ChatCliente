[{"C:\\Users\\Dalila Santana\\chat\\src\\index.js":"1","C:\\Users\\Dalila Santana\\chat\\src\\reportWebVitals.js":"2","C:\\Users\\Dalila Santana\\chat\\src\\chat.js":"3","C:\\Users\\Dalila Santana\\chat\\src\\componentes\\header\\index.js":"4","C:\\Users\\Dalila Santana\\chat\\src\\componentes\\aside\\index.js":"5","C:\\Users\\Dalila Santana\\chat\\src\\componentes\\main\\index.js":"6","C:\\Users\\Dalila Santana\\chat\\src\\componentes\\footer\\index.js":"7","C:\\Users\\Dalila Santana\\chat\\src\\componentes\\main\\MessageRight.js":"8","C:\\Users\\Dalila Santana\\chat\\src\\componentes\\main\\MessageLeft.js":"9","C:\\Users\\Dalila Santana\\chat\\src\\componentes\\main\\mapMensagens.js":"10","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\index.js":"11","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\reportWebVitals.js":"12","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\chat.js":"13","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\componentes\\footer\\index.js":"14","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\componentes\\header\\index.js":"15","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\componentes\\aside\\index.js":"16","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\componentes\\footer\\criarMensagens.js":"17","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\models\\mensagens.model.js":"18","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\componentes\\main\\mensagens.js":"19","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\index.js":"20","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\reportWebVitals.js":"21","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\chat.js":"22","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\models\\mensagens.model.js":"23","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\main\\mensagens.js":"24","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\header\\index.js":"25","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\aside\\index.js":"26","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\models\\contatos.model.js":"27","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\aside\\atualizar-contatos.js":"28","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\aside\\remover-contatos.js":"29","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\main\\remover-mensagens.js":"30","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\aside\\adicionar-contatos.js":"31"},{"size":593,"mtime":1609805708448,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1606868682711,"results":"34","hashOfConfig":"33"},{"size":2860,"mtime":1610655677783,"results":"35","hashOfConfig":"33"},{"size":677,"mtime":1609350450068,"results":"36","hashOfConfig":"33"},{"size":946,"mtime":1609350321172,"results":"37","hashOfConfig":"33"},{"size":491,"mtime":1609346078906,"results":"38","hashOfConfig":"33"},{"size":2270,"mtime":1610649618765,"results":"39","hashOfConfig":"33"},{"size":640,"mtime":1609676264468,"results":"40","hashOfConfig":"33"},{"size":637,"mtime":1609676339890,"results":"41","hashOfConfig":"33"},{"size":740,"mtime":1610655145056,"results":"42","hashOfConfig":"33"},{"size":595,"mtime":1611011776744,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1606868682711,"results":"45","hashOfConfig":"44"},{"size":6125,"mtime":1611247860598,"results":"46","hashOfConfig":"44"},{"size":2621,"mtime":1611160319713,"results":"47","hashOfConfig":"44"},{"size":677,"mtime":1609350450068,"results":"48","hashOfConfig":"44"},{"size":1414,"mtime":1611162011958,"results":"49","hashOfConfig":"44"},{"size":1943,"mtime":1611153736833,"results":"50","hashOfConfig":"44"},{"size":237,"mtime":1611061578072,"results":"51","hashOfConfig":"44"},{"size":2321,"mtime":1611246915996,"results":"52","hashOfConfig":"44"},{"size":595,"mtime":1611011776744,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1606868682711,"results":"55","hashOfConfig":"54"},{"size":3853,"mtime":1613047329506,"results":"56","hashOfConfig":"54"},{"size":237,"mtime":1611061578072,"results":"57","hashOfConfig":"54"},{"size":3646,"mtime":1613062500745,"results":"58","hashOfConfig":"54"},{"size":820,"mtime":1612466300894,"results":"59","hashOfConfig":"54"},{"size":5542,"mtime":1613156054446,"results":"60","hashOfConfig":"54"},{"size":210,"mtime":1611331990836,"results":"61","hashOfConfig":"54"},{"size":3639,"mtime":1613157076571,"results":"62","hashOfConfig":"54"},{"size":2310,"mtime":1613154637248,"results":"63","hashOfConfig":"54"},{"size":2360,"mtime":1611514825498,"results":"64","hashOfConfig":"54"},{"size":3195,"mtime":1611661764442,"results":"65","hashOfConfig":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"wfzz66",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"ydwjf2",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"105"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"8okw5h",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"117"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"117"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"117"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},"C:\\Users\\Dalila Santana\\chat\\src\\index.js",["146"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Chat from './chat';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from './componentes/footer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chat />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["147","148"],"C:\\Users\\Dalila Santana\\chat\\src\\reportWebVitals.js",[],"C:\\Users\\Dalila Santana\\chat\\src\\chat.js",["149"],"import React, { useState, useEffect } from 'react';\nimport './chat.css';\nimport Header from './componentes/header';\nimport Aside from './componentes/aside';\n//import Main from './componentes/main';\nimport Footer from './componentes/footer';\nimport contacts from '../src/data/contacts.json';\nimport message from '../src/data/message.json';\nimport MessageLeft from './componentes/main/MessageLeft';\nimport MessageRight from './componentes/main/MessageRight';\n//import Mensagens from './componentes/main/mapMensagens';\n//import { render } from 'react-dom';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction Chat(props) { \n \n  const [contatos, setContacts] = useState(contacts);\n  const [liveMessage, setLiveMessage] = useState(message);\n  //const liveMessage = [descricao, time, isMe];\n\n  const FiltrarContacts = (text) => {\n    setContacts(contacts.filter((c) => c.name.toUpperCase().includes(text.toUpperCase())));\n  }\n\n  return (\n    <div  className=\"container-fluid\">\n      <div className=\"row\">\n        <header className=\"col-sm-12\" style={{ backgroundColor: '#eeeeee', height: '9vh' }}>\n          <Header />\n        </header>\n      </div>\n     \n      <div className=\"row\" >\n        <div className=\"col p-1\" style={{ backgroundColor: '#F7F7F7', height: '40px' }}>\n          <input className=\"col-3\" style={{ width: '333px' }}\n            onChange={(event) => FiltrarContacts(event.target.value)}\n          />\n        </div>\n      </div>\n      \n      <div className=\"row\" >\n        <aside className=\"col-sm-3\" style={{ backgroundColor: '#FFFFFF' }}>\n          {contatos.map((c) => (\n            <div  key={c.id}>\n            <Aside            \n              name={c.name}\n              time={c.time} />\n            </div>\n          ))}\n        </aside>\n\n        <main className=\"col-sm-9\" style={{ backgroundColor: '#F7F7F7' }}>       \n          {liveMessage.map((c) => { \n            if ((c.isMe) === true)\n            return ( \n                <div key={c.id} className=\"d-flex justify-content-start mt-2\">\n                 <MessageLeft \n                    descricao={c.descricao}\n                    time={c.time} />\n                </div>\n              )\n            else\n              return (\n                <div  key={c.id} className=\"d-flex justify-content-end mt-2\">\n                  <MessageRight\n                    descricao={c.descricao}\n                    time={c.time} />\n                </div>\n              )            \n          })}\n        </main>\n      </div>\n       \n      <div className=\"row justify-content-end\">\n        <footer className=\"col-sm-9\" style={{ backgroundColor: '#F5F1EE', height: '10vh' }}>\n          <Footer setLiveMessage={setLiveMessage}/>\n        </footer>\n      </div>\n    </div>\n   \n  );\n};\n\nexport default Chat;\n","C:\\Users\\Dalila Santana\\chat\\src\\componentes\\header\\index.js",[],["150","151"],"C:\\Users\\Dalila Santana\\chat\\src\\componentes\\aside\\index.js",["152"],"import React from 'react';\r\n\r\n\r\nfunction Aside(props) {\r\n  return (\r\n    <div className=\"row mt-1\">\r\n\r\n      <div className=\"Item1 col-xs align-self-center\" style={{\r\n        margin: '5px', backgroundColor: ' #C4C4C4',\r\n        height: '6vh', width: '40px'\r\n      }}></div>\r\n\r\n      <h1 className=\"text-center\" className=\"col ml-3 align-self-center \" style={{\r\n        fontSize: '90%',\r\n        fontFamily: ' Arial, Helvetica, sans-serif', fontStyle: 'normal', fontWeight: 'bold', color: '#000000'\r\n      }} >\r\n        {props.name}</h1>\r\n\r\n      <h1 className=\"col d-flex justify-content-end  align-self-end\" style={{\r\n        fontSize: '87%',\r\n        fontFamily: 'Helvetica Neue', fontStyle: 'normal', fontWeight: 'bold', color: ' #C4C4C4'\r\n      }} >{props.time}</h1>\r\n\r\n      <hr className=\"row mt-1 \" style={{\r\n        width: '388px',\r\n        height: '1px', background: '#F7F7F7'\r\n      }} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Aside;","C:\\Users\\Dalila Santana\\chat\\src\\componentes\\main\\index.js",[],"C:\\Users\\Dalila Santana\\chat\\src\\componentes\\footer\\index.js",["153","154","155","156"],"C:\\Users\\Dalila Santana\\chat\\src\\componentes\\main\\MessageRight.js",[],["157","158"],"C:\\Users\\Dalila Santana\\chat\\src\\componentes\\main\\MessageLeft.js",[],"C:\\Users\\Dalila Santana\\chat\\src\\componentes\\main\\mapMensagens.js",[],"C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\index.js",[],["159","160"],"C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\reportWebVitals.js",[],"C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\chat.js",["161","162","163","164"],"import React, { useState, useEffect } from 'react';\nimport './chat.css';\nimport Header from './componentes/header';\nimport Aside from './componentes/aside';\n//import Main from './componentes/main';\n//import Footer   from './componentes/footer';\n//import contacts from '../src/data/contacts.json';\n//import message from '../src/data/message.json';\n//import MessageLeft from './componentes/main/MessageLeft';\n//import MessageRight from './componentes/main/MessageRight';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport Mensagens from '../src/models/mensagens.model';\nimport Mensagems from './componentes/main/mensagens';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\n\nimport axios from 'axios';\n\nfunction Chat() {\n\n  // const {mensagem} = props;\n\n  // LISTAR_CONTATOS.\n  const API_URL_LISTAR_CONTATOS = 'http://localhost:3001/chat-contatos';\n\n  // LISTAR_MENSAGENS.\n  const API_URL_LISTAR_MENSAGENS = 'http://localhost:3001/chat-mensagens';\n  const API_URL_CADASTRAR_MENSAGENS = 'http://localhost:3001/chat-mensagens';\n\n  // LISTAR_CONTATOS.\n  const [contatos, setContatos] = useState([]);\n  const [carregarContatos, setCarregarContatos] = useState(true);\n  const [totalContatos, setTotalContatos] = useState(0);\n  const [filtroContato, setFiltroContato] = useState('');\n\n  // LISTAR_MENSAGENS.\n  const [mensagems, setMensagems] = useState([]);\n  const [carregarMensagems, setCarregarMensagems] = useState(true);\n  const [totalMensagems, setTotalMensagems] = useState(0);\n  const [filtroMensagems, setFiltroMensagems] = useState('');\n\n  // LISTAR_CONTATOS.\n  useEffect(() => {\n    async function obterContatos() {\n      try {\n        const params = `?filtro-contato=${filtroContato}`;\n        let { data } = await axios.get(API_URL_LISTAR_CONTATOS + params);\n        setTotalContatos(data.totalContatos);\n        setContatos(data.contatos);\n      } catch (err) {\n        setContatos([]);\n      }\n    }\n    if (carregarContatos) {\n      obterContatos();\n      setCarregarContatos(false);\n    }\n  }, [carregarContatos, filtroContato]);\n\n  function handleFiltrar(event) {\n    setFiltroContato(event.target.value);\n    setCarregarContatos(true);\n  }\n\n  // LISTAR_MENSAGENS.\n  useEffect(() => {\n    async function obterMensagems() {\n      try {\n        const params = `?filtro-mensagem=${filtroMensagems}`;\n        let { data } = await axios.get(API_URL_LISTAR_MENSAGENS + params);\n        setTotalMensagems(data.totalMensagems);\n        setMensagems(data.mensagems);\n      } catch (err) {\n        setMensagems([]);\n      }\n    }\n    if (carregarMensagems) {\n      obterMensagems();\n      setCarregarMensagems(false);\n    }\n  }, [carregarMensagems, filtroMensagems]);\n\n  function handleFiltrarMensagens(event) {\n    setFiltroMensagems(event.target.value);\n    setCarregarMensagems(true);\n  }\n\n  // CADASTRAR_MENSAGENS\n  async function cadastrar(event) {\n    event.preventDefault();\n\n    if (event.currentTarget.checkValidity() === true) {\n      try {\n        const novaMensagem = new Mensagens(null, mensagems, false);\n        await axios.post(API_URL_CADASTRAR_MENSAGENS, novaMensagem);\n\n      } catch (err) {\n\n      }\n    }\n  }\n\n  function handleTxtMensagem(event) {\n    setMensagems(event.target.value);\n  }\n\n\n\n\n  //  const FiltrarContacts = (text) => {\n  //    setContacts(contacts.filter((c) => c.name.toUpperCase().includes(text.toUpperCase())));\n  //  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <header className=\"col-sm-12\" style={{ backgroundColor: '#eeeeee', height: '9vh' }}>\n          <Header />\n        </header>\n      </div>\n\n      <div className=\"row\" >\n        <div className=\"col p-1\" style={{ backgroundColor: '#F7F7F7', height: '40px' }}>\n          <input className=\"col-3\" style={{ width: '25%' }}\n            // LISTAR_CONTATOS.\n            value={filtroContato}\n            onChange={handleFiltrar}\n            className=\"filtro-contato\"\n            totalContatos={totalContatos}\n          />\n        </div>\n      </div>\n\n      <div className=\"row\" >\n        <aside className=\"col-sm-3\" style={{ backgroundColor: '#FFFFFF' }}>\n          <Aside\n            contatos={contatos}\n            recarregarContatos={setCarregarContatos} />\n        </aside>\n\n        <main className=\"col-sm-9\" style={{ backgroundColor: '#F7F7F7' }}>\n\n          <div className=\"p-1 d-flex justify-content-center\" style={{ backgroundColor: '#F7F7F7', height: '40px' }}>\n            <input className=\"col-3\" style={{ width: '40%', backgroundColor: '#F7F7F7'}}\n              // LISTAR_MENSAGENS.\n              value={filtroMensagems}\n              onChange={handleFiltrarMensagens}\n              className=\"filtro-mensagem\"\n              totalContatos={totalMensagems}\n            />\n          </div>\n\n          <Mensagems\n           mensagems={mensagems}\n           recarregarMensagems={setCarregarMensagems}/>\n\n        </main>\n      </div>\n\n      <div className=\"row justify-content-end\">\n        <footer className=\"col-sm-9\" style={{ backgroundColor: '#F5F1EE', height: '10vh' }}>\n\n          <form onSubmit={cadastrar}>\n            <div className=\"row justify-content-center mt-1 \" >\n              <textarea value={mensagems} onChange={handleTxtMensagem} type=\"text\"\n                className=\"col-8 mt-1 \" style={{\n                  width: '10%', height: '6.2vh', backgroundColor: '#FFFFFF',\n                  borderRadius: '4px', borderColor: '#FFFFFF'\n                }}>\n              </textarea>\n\n              <button type=\"button\" type=\"submit\" className=\"col-4\" className=\"btn btn-light\"\n                value=\"Submit\" style={{\n                  width: '20%', height: '6px', backgroundColor: '#F5F1EE',\n                  borderColor: '#F5F1EE'\n                }}>\n                <FontAwesomeIcon icon={faPlay} className=\"fa-lg\" />\n              </button>\n            </div>\n          </form>\n\n\n        </footer>\n      </div>\n    </div>\n\n    // setLiveMessage={setLiveMessage}\n\n  );\n};\n\nexport default Chat;\n","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\componentes\\footer\\index.js",["165","166"],"//import React, { useState } from 'react';\r\n//import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\n//import Chat from '../../chat';\r\n//import axios from 'axios';\r\n//import Mensagens from '../../models/mensagens.model';\r\n//import Chat from '../../chat';\r\n//import MessageLeft from '../main/MessageLeft';\r\n//import MessageRight from '../main/MessageRight';\r\n//import Datetime from '../Datetime';\r\n//import Timer from '../Timer';\r\n//import { render } from 'react-dom';\r\n\r\nfunction Footer(props) {\r\n //const { setLiveMessage } = props; // resgatando a funcao\r\n const { handleTxtMensagem, cadastrar, mensagems } = props;\r\n \r\n // function handleSubmit(event) {\r\n //   event.preventDefault();\r\n //   const newMessage = event.target.elements.message.value;\r\n    // <Timer date = {new Date()}/>\r\n\r\n //   var date = new Date();\r\n //   var horaAtual = date.getHours()+\":\"+date.getMinutes();\r\n\r\n//    var obj = [\r\n//      {\r\n//      id: 1,\r\n//      descricao: newMessage,\r\n//      time: horaAtual, // colocar a hora atual do sistema\r\n//      isMe: true // eh true porque quem envia a mensagem SEMPRE sou eu\r\n//    } \r\n//  ]\r\n//     console.log(cadastrar);\r\n    \r\n//    setLiveMessage(\r\n//      (oldMessage) => oldMessage.push(obj) // oldMessage contem as mensagens que já estao em liveMessage \r\n//      );\r\n    \r\n\r\n    // localStorage.setItem('mensagem', JSON.stringify(message));\r\n    // window.location.reload();\r\n  \r\n\r\n //   <div>\r\n //   <p>{mensagem}</p>\r\n //   <div/>\r\n  \r\n\r\n  //    <form onSubmit={handleSubmit}>\r\n  //      <input type=\"text\" name=\"message\" placeholder=\"Nome de usuário\" required />\r\n  //      <button type=\"submit\">Entrar</button>\r\n  //    </form>\r\n  return ( \r\n    <form  onSubmit={cadastrar}>\r\n      <div className=\"row justify-content-center mt-1 \" >\r\n        <textarea  value={mensagems} onChange={handleTxtMensagem} type=\"text\"\r\n         name=\"mensagems\" className=\"col-8 mt-1 \" style={{\r\n          width: '10%', height: '6.2vh', backgroundColor: '#FFFFFF',\r\n          borderRadius: '4px', borderColor: '#FFFFFF'\r\n        }} >\r\n        </textarea>\r\n\r\n        <button type=\"button\" type=\"submit\" className=\"col-4\" className=\"btn btn-light\"\r\n          value=\"Submit\" style={{\r\n            width: '20%', height: '6px', backgroundColor: '#F5F1EE',\r\n            borderColor: '#F5F1EE'\r\n          }}>\r\n          <FontAwesomeIcon icon={faPlay} className=\"fa-lg\" />\r\n        </button>\r\n      </div>\r\n    </form>\r\n        \r\n  );\r\n      \r\n        };      \r\n\r\nexport default Footer;","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\componentes\\header\\index.js",[],["167","168"],"C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\componentes\\aside\\index.js",["169"],"import React from 'react';\r\n\r\nfunction Aside(props) {\r\n\r\n    const { contatos } = props;\r\n\r\n    return (\r\n        props.contatos.map(contato =>\r\n            <div key={contatos.id} data-testid=\"contatos\">\r\n                <div className=\"row mt-1\">\r\n                    <div className=\"Item1 col-xs align-self-center\" style={{\r\n                        margin: '5px', backgroundColor: ' #C4C4C4',\r\n                        height: '6vh', width: '40px'\r\n                    }}></div>\r\n\r\n                    <h1 className=\"text-center\" className=\"col ml-3 align-self-center \" style={{\r\n                        fontSize: '90%',\r\n                        fontFamily: ' Arial, Helvetica, sans-serif', fontStyle: 'normal', fontWeight: 'bold', color: '#000000'\r\n                    }} >{contato.name}</h1>\r\n\r\n                    <h1 className=\"col-sm d-flex justify-content-end align-self-end\" style={{ \r\n                        fontSize: '87%',\r\n                        fontFamily: 'Helvetica Neue', fontStyle: 'normal', fontWeight: 'bold', color: ' #C4C4C4'\r\n                    }} >{contato.time}</h1>\r\n\r\n                    <hr className=\"row mt-1 \" style={{\r\n                        width: '97%',\r\n                        height: '1px', background: '#F7F7F7'\r\n                    }} />\r\n                   \r\n                </div>\r\n            </div>\r\n            \r\n\r\n\r\n        )\r\n    )\r\n\r\n}\r\n\r\nexport default Aside;\r\n\r\n","C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\componentes\\footer\\criarMensagens.js",["170","171"],"C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\models\\mensagens.model.js",[],"C:\\Users\\Dalila Santana\\Desktop\\Projetos\\chat-api-cliente\\src\\componentes\\main\\mensagens.js",[],"C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\index.js",[],["172","173"],"C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\reportWebVitals.js",[],"C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\chat.js",["174","175"],"import React, { useState, useEffect } from 'react';\n//import { makeStyles } from '@material-ui/styles';\n//import { Container } from '@material-ui/core';\nimport './chat.css';\nimport Header from './componentes/header';\nimport Aside from './componentes/aside';\nimport Mensagems from './componentes/main/mensagens';\n\nimport axios from 'axios';\n\nfunction Chat() {\n\n  // LISTAR_CONTATOS.\n  const API_URL_LISTAR_CONTATOS = 'http://localhost:3001/chat-contatos';\n\n  // LISTAR_MENSAGENS.\n  const API_URL_LISTAR_MENSAGENS = 'http://localhost:3001/chat-mensagens';\n  //const API_URL_CADASTRAR_MENSAGEMS = 'http://localhost:3001/chat-mensagens';\n\n  // LISTAR_CONTATOS.\n  const [contatos, setContatos] = useState([]);\n  const [carregarContatos, setCarregarContatos] = useState(true);\n  const [totalContatos, setTotalContatos] = useState(0);\n  const [filtroContato, setFiltroContato] = useState('');\n\n  // LISTAR_MENSAGENS.\n  const [mensagems, setMensagems] = useState([]);\n  const [carregarMensagems, setCarregarMensagems] = useState(true);\n  const [totalMensagems, setTotalMensagems] = useState(0);\n  const [filtroMensagems, setFiltroMensagems] = useState('');\n\n  // LISTAR_CONTATOS.\n  useEffect(() => {\n    async function obterContatos() {\n      try {\n        const params = `?filtro-contato=${filtroContato}`;\n        let { data } = await axios.get(API_URL_LISTAR_CONTATOS + params);\n        setTotalContatos(data.totalContatos);\n        setContatos(data.contatos);\n      } catch (err) {\n        setContatos([]);\n      }\n    }\n    if (carregarContatos) {\n      obterContatos();\n      setCarregarContatos(false);\n    }\n  }, [carregarContatos, filtroContato]);\n\n  function handleFiltrar(event) {\n    setFiltroContato(event.target.value);\n    setCarregarContatos(true);\n  }\n\n  // LISTAR_MENSAGENS.\n  useEffect(() => {\n    async function obterMensagems() {\n      try {\n        const params = `?filtro-mensagem=${filtroMensagems}`;\n        let { data } = await axios.get(API_URL_LISTAR_MENSAGENS + params);\n        setTotalMensagems(data.totalMensagems);\n        setMensagems(data.mensagems);\n      } catch (err) {\n        setMensagems([]);\n      }\n    }\n    if (carregarMensagems) {\n      obterMensagems();\n      setCarregarMensagems(false);\n    }\n  }, [carregarMensagems, filtroMensagems]);\n\n  function handleFiltrarMensagens(event) {\n    setFiltroMensagems(event.target.value);\n    setCarregarMensagems(true);\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <header className=\"col-sm-12\">\n          <Header />\n        </header>\n      </div>\n\n      <div className=\"row\">\n        <aside id=\"container\" className=\"col-sm-3\">\n          <div className=\"row\" >\n            <div className=\"p-1\" className=\"divInput2\">\n              <input id=\"Input2Aside\" placeholder=\"&#xF002; Pesquisar contato\"\n                // LISTAR_CONTATOS.\n                value={filtroContato}\n                onChange={handleFiltrar}\n                className=\"filtro-contato\"\n                totalContatos={totalContatos}\n              />\n            </div>\n          </div>\n          <Aside\n            setContatos={setContatos}\n            contatos={contatos}\n            recarregarContatos={setCarregarContatos} />\n        </aside>\n\n        <main className=\"col-sm-9\">\n        <div className=\"divInput1\" className=\"row justify-content-center p-1\">\n            <input id=\"Input1Main\" placeholder=\"&#xF002; Pesquisar mensagem\"\n              // LISTAR_MENSAGENS.\n              value={filtroMensagems}\n              onChange={handleFiltrarMensagens}\n              className=\"filtro-mensagem\"\n              totalContatos={totalMensagems}\n            />\n          </div>\n          <Mensagems\n            mensagems={mensagems}\n            recarregarMensagems={setCarregarMensagems} />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\models\\mensagens.model.js",[],"C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\main\\mensagens.js",["176","177"],"import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport Mensagens from '../../models/mensagens.model';\r\nimport './main.css';\r\n//import RemoverMensagens from '../main/remover-mensagens';\r\n\r\nimport axios from 'axios';\r\n\r\nfunction Mensagems(props) {\r\n\r\n    //  const { mensagems } = props;\r\n\r\n    const API_URL_CADASTRAR_MENSAGEMS = 'http://localhost:3001/chat-mensagens';\r\n\r\n    const [mensagems, setMensagems] = useState('');\r\n\r\n    //  const { setContatos } = props;\r\n\r\n    //  const { contatos } = props;\r\n\r\n\r\n    async function cadastrar(event) {\r\n        if (event.currentTarget.checkValidity() === true) {\r\n            try {\r\n                const novaMensagems = new Mensagens(null, mensagems, false);\r\n                await axios.post(API_URL_CADASTRAR_MENSAGEMS, novaMensagems);\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleTxtMensagem(event) {\r\n        setMensagems(event.target.value);\r\n    }\r\n\r\n\r\n    // <h1 className=\"col align-self-end \">\r\n    // <RemoverMensagens mensagems={mensagems} carregarMensagens={props.carregarMensagens} />\r\n    // </h1>\r\n    // As horas das mensagens não estão aparecendo.\r\n   \r\n    var date = new Date();\r\n    var horaTime = date.getHours() + \":\" + date.getMinutes();\r\n   \r\n    return (\r\n        <div>\r\n            <div id=\"container\"> \r\n            {props.mensagems.map(mensagem =>\r\n\r\n                mensagem.isMe === true ?\r\n                   \r\n                    <div key={mensagem.id} className=\"d-flex justify-content-start mt-2\">\r\n                        <div className=\"row-cols-auto\">\r\n                            <div id=\"balaoEsq\" className=\"col\">\r\n                                <h6 id=\"balaoMsgEsq\" className=\"pt-2\">{mensagem.descricao}</h6>\r\n                                <h6 id=\"balaoTimeEsq\"> {mensagem.time?mensagem.time:horaTime}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div key={mensagem.id} className=\"d-flex justify-content-end mt-2\">\r\n                        <div className=\"row-cols-auto\">\r\n                            <div id=\"balaoDir\" className=\"col\">\r\n                                <h6 id=\"balaoMsgDir\" className=\"pt-2\">{mensagem.descricao}</h6 >\r\n                                <h6 id=\"balaoTimeDir\">{mensagem.time?mensagem.time:horaTime}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n            )\r\n            }\r\n             </div>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"row\">\r\n                <footer id=\"fundoInput\" className=\"col\">\r\n                    <form onSubmit={cadastrar}>\r\n                        <div className=\"row justify-content-center mt-1 \" >\r\n                            <textarea id=\"textInput\" placeholder=\"Digite uma mensagem\" value={mensagems} onChange={handleTxtMensagem} type=\"text\"\r\n                                className=\"col-8 mt-1\">\r\n                            </textarea>\r\n                            <button id=\"botaoInput\" type=\"button\" type=\"submit\" className=\"col-4\" className=\"btn btn-light\"\r\n                                value=\"Submit\">\r\n                                <FontAwesomeIcon icon={faPlay} className=\"fa-lg\" />\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mensagems;","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\header\\index.js",["178","179"],"import React from 'react';\r\nimport './header.css';\r\nimport Imagem1 from '../../images/1w.png';\r\nimport Imagem2 from '../../images/232.png';\r\n//import { makeStyles } from '@material-ui/styles';\r\n//import { faAlignCenter } from '@fortawesome/free-solid-svg-icons';\r\n//import AdicionarContatos from '../aside/adicionar-contatos';\r\n\r\nfunction Header() {\r\n\r\n  //const classes = useStyles();\r\n\r\n  //const {contatos} = props;\r\n\r\n  //const {carregarContatos} = props;  \r\n\r\n  return (\r\n\r\n    <div className=\"row\">\r\n      <img src={Imagem2} id=\"foto1Header\" className=\"Item1 col-xs align-self-center\"/>\r\n      <img src={Imagem1} id=\"foto2Header\" className=\"Item2 col-xs align-self-center offset-sm-3\"/>\r\n      <h1 id=\"nomeHeader\" className=\"Item3 col align-self-center\">John Doe</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\aside\\index.js",["180","181","182"],"import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport Contatos from '../../models/contatos.model';\r\nimport AtualizarContato from '../aside/atualizar-contatos';\r\nimport RemoverContato from '../aside/remover-contatos';\r\nimport axios from 'axios';\r\nimport './aside.css';\r\nimport Images from '../../images/contatos.png';\r\n\r\nfunction Aside(props) {\r\n\r\n    const API_URL = 'http://localhost:3001';\r\n\r\n    const API_URL_CADASTRAR_CONTATOS = API_URL + '/chat-contatos';\r\n\r\n    const [contatos, setContatos] = useState('');\r\n    const [formValidado, setFormValidado] = useState(false);\r\n    const [exibirModal, setExibirModal] = useState(false);\r\n\r\n    // Adicionar Contato\r\n    async function cadastrar(event) {\r\n        setFormValidado(true);\r\n        if (event.currentTarget.checkValidity() === true) {\r\n            try {\r\n                const novaContato = new Contatos(null, contatos, false);\r\n                await axios.post(API_URL_CADASTRAR_CONTATOS, novaContato);\r\n                setExibirModal(true);\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    function mostrarModal() {\r\n        setExibirModal(true);\r\n    }\r\n\r\n\r\n    function handleTxtContato(event) {\r\n        setContatos(event.target.value);\r\n    }\r\n\r\n\r\n    function handleFecharModal() {\r\n        setExibirModal(false);\r\n    }\r\n\r\n    // function mostrarImagem(foto){\r\n    //   if(foto){\r\n    //       return(   );\r\n    //   }else\r\n    //       return( <img src={Images} id=\"fotosAside\"/>);\r\n    // }\r\n\r\n    //{mostrarImagem(contato.foto ? contato.foto : false)}\r\n    // <img src={ `http://localhost:3001/images/%3C%=%20foto[i].imagem%20%%3E${contato.foto}` } alt=\"fotoContato\">{contato.foto}</img>\r\n    //  <img src={ `http://localhost:3001/chat-contatos/images/%3C%=%20foto[i].imagem%20%%3E` } ></img> As horas dos contatos não estão aparecendo.\r\n\r\n    var date = new Date();\r\n    var horaTime = date.getHours() + \":\" + date.getMinutes();\r\n\r\n    return (\r\n        props.contatos.map(contato =>\r\n            <div key={contato.id} data-testid=\"contatos\">\r\n                <div>\r\n                    <div className=\"row mt-1\">\r\n\r\n\r\n                        {contato.foto ? <img className=\"Item1 col\" id=\"fotosAside\" src={API_URL + '/images/' + contato.foto} />\r\n                            : <img className=\"Item1 col\" src={Images} id=\"fotosAside\" />}\r\n\r\n                        <h1 id=\"contatosAside\" className=\"text-center\" className=\"col-6 ml-3 align-self-center\">\r\n                            {contato.name}</h1>\r\n                        <h1 id=\"timeAside\" className=\"col align-self-end\">\r\n                            {contato.time ? contato.time : horaTime}</h1>\r\n                        <hr id=\"linhaAside1\" className=\"row mt-1 \" />\r\n                        <div className=\"row\">\r\n                            <h1 className=\"col align-self-end \">\r\n                                <RemoverContato contato={contato} recarregarContatos={props.recarregarContatos} />\r\n                            </h1>\r\n                            <h1 className=\"col align-self-end\">\r\n                                <AtualizarContato contato={contato} recarregarContato={props.recarregarContato} />\r\n                            </h1>\r\n                            <h1 id=\"addContatosAside\" className=\"col p-3\" onClick={mostrarModal} >\r\n                                <FontAwesomeIcon icon={faPlus} className=\"fa-lm\" /></h1>\r\n\r\n                        </div>\r\n                        <hr id=\"linhaAside2\" className=\"row mt-1 \" />\r\n                    </div>\r\n\r\n                    <Modal show={exibirModal} onHide={handleFecharModal} data-testid=\"modal\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Adicionar Contato</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Digite o Contato\"\r\n                                minLength=\"5\"\r\n                                maxLength=\"100\"\r\n                                required\r\n                                value={contatos}\r\n                                onChange={handleTxtContato}\r\n                                data-testid=\"txt-tarefa\" />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                A tarefa deve conter ao menos 5 caracteres.\r\n                             </Form.Control.Feedback>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Form onSubmit={cadastrar} validated={formValidado}\r\n                                noValidate >\r\n                                <Button\r\n                                    variant=\"success\"\r\n                                    type=\"submit\"\r\n                                    data-testid=\"btn-cadastrar\"\r\n                                >\r\n                                    Adicionar\r\n                                </Button>\r\n                            </Form>\r\n                            &nbsp;\r\n              <Button onClick={handleFecharModal} className=\"btn btn-light\">Voltar</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Aside;\r\n\r\n","C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\models\\contatos.model.js",[],["183","184"],"C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\aside\\atualizar-contatos.js",[],"C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\aside\\remover-contatos.js",[],"C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\main\\remover-mensagens.js",[],"C:\\Users\\Dalila Santana\\Documents\\ChatCliente\\src\\componentes\\aside\\adicionar-contatos.js",[],["185","186"],{"ruleId":"187","severity":1,"message":"188","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":14},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"187","severity":1,"message":"195","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"191","replacedBy":"196"},{"ruleId":"193","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":13,"column":35,"nodeType":"200","endLine":13,"endColumn":74},{"ruleId":"187","severity":1,"message":"201","line":2,"column":16,"nodeType":"189","messageId":"190","endLine":2,"endColumn":24},{"ruleId":"187","severity":1,"message":"195","line":2,"column":26,"nodeType":"189","messageId":"190","endLine":2,"endColumn":35},{"ruleId":"198","severity":1,"message":"199","line":71,"column":31,"nodeType":"200","endLine":71,"endColumn":44},{"ruleId":"198","severity":1,"message":"199","line":71,"column":63,"nodeType":"200","endLine":71,"endColumn":88},{"ruleId":"191","replacedBy":"202"},{"ruleId":"193","replacedBy":"203"},{"ruleId":"191","replacedBy":"204"},{"ruleId":"193","replacedBy":"205"},{"ruleId":"198","severity":1,"message":"199","line":129,"column":13,"nodeType":"200","endLine":129,"endColumn":39},{"ruleId":"198","severity":1,"message":"199","line":149,"column":15,"nodeType":"200","endLine":149,"endColumn":42},{"ruleId":"198","severity":1,"message":"199","line":173,"column":37,"nodeType":"200","endLine":173,"endColumn":50},{"ruleId":"198","severity":1,"message":"199","line":173,"column":69,"nodeType":"200","endLine":173,"endColumn":94},{"ruleId":"198","severity":1,"message":"199","line":66,"column":31,"nodeType":"200","endLine":66,"endColumn":44},{"ruleId":"198","severity":1,"message":"199","line":66,"column":63,"nodeType":"200","endLine":66,"endColumn":88},{"ruleId":"191","replacedBy":"206"},{"ruleId":"193","replacedBy":"207"},{"ruleId":"198","severity":1,"message":"199","line":16,"column":49,"nodeType":"200","endLine":16,"endColumn":88},{"ruleId":"198","severity":1,"message":"199","line":45,"column":33,"nodeType":"200","endLine":45,"endColumn":46},{"ruleId":"198","severity":1,"message":"199","line":45,"column":65,"nodeType":"200","endLine":45,"endColumn":90},{"ruleId":"191","replacedBy":"208"},{"ruleId":"193","replacedBy":"209"},{"ruleId":"198","severity":1,"message":"199","line":89,"column":34,"nodeType":"200","endLine":89,"endColumn":55},{"ruleId":"198","severity":1,"message":"199","line":106,"column":36,"nodeType":"200","endLine":106,"endColumn":78},{"ruleId":"198","severity":1,"message":"199","line":87,"column":67,"nodeType":"200","endLine":87,"endColumn":80},{"ruleId":"198","severity":1,"message":"199","line":87,"column":99,"nodeType":"200","endLine":87,"endColumn":124},{"ruleId":"210","severity":1,"message":"211","line":20,"column":7,"nodeType":"212","endLine":20,"endColumn":87},{"ruleId":"210","severity":1,"message":"211","line":21,"column":7,"nodeType":"212","endLine":21,"endColumn":99},{"ruleId":"210","severity":1,"message":"211","line":71,"column":41,"nodeType":"212","endLine":71,"endColumn":128},{"ruleId":"210","severity":1,"message":"211","line":72,"column":31,"nodeType":"212","endLine":72,"endColumn":89},{"ruleId":"198","severity":1,"message":"199","line":74,"column":72,"nodeType":"200","endLine":74,"endColumn":112},{"ruleId":"191","replacedBy":"213"},{"ruleId":"193","replacedBy":"214"},{"ruleId":"191","replacedBy":"215"},{"ruleId":"193","replacedBy":"216"},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["217"],"no-negated-in-lhs",["218"],"'useEffect' is defined but never used.",["217"],["218"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.",["217"],["218"],["217"],["218"],["217"],["218"],["217"],["218"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["217"],["218"],["217"],["218"],"no-global-assign","no-unsafe-negation"]